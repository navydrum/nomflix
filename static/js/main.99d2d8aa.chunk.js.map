{"version":3,"sources":["assets/noPosterSmall.png","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Header.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","Container","styled","div","Title","span","Grid","Section","title","children","role","aria-label","Text","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","to","require","length","substring","HomePresenter","nowPlaying","popular","upcoming","error","loading","Loader","map","movie","key","poster_path","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","movieApi","get","append_to_response","term","query","encodeURIComponent","tvApi","HomeContainer","state","data","results","console","log","this","setState","React","Component","TVPresenter","topRated","airingToday","show","name","first_air_date","TVContainer","componentDidMount","a","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","e","preventDefault","searchByTerm","target","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Item","Divider","Overview","p","Category","CategoryTab","ul","DetailPresenter","li","result","backdrop_path","runtime","episode_run_time","genres","genre","index","overview","videos","item","DetailContainer","pathname","location","includes","match","push","history","parseId","parseInt","isNaN","Header","header","List","current","SLink","Link","withRouter","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.99d2d8aa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPosterSmall.98e9eea0.png\";","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    :not(:last-child){\r\n        margin-bottom : 50px;\r\n    }\r\n`;\r\n\r\nconst Title = styled.span`\r\n    font-size : 16px;\r\n    font-weight : 600;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n    margin-top : 25px;\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, 125px);\r\n    grid-gap : 25px;\r\n`;\r\n\r\n//children 은 react prop\r\n\r\nconst Section = ({title, children}) => (\r\n    <Container>\r\n        <Title>{ title }</Title>\r\n        <Grid>{ children }</Grid>\r\n    </Container>\r\n);\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node])\r\n}\r\n\r\nexport default Section;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n//vh viewport height, vw viewport width \r\nconst Container = styled.div`\r\n    height : 100vh;    \r\n    width : 100vw;\r\n    display : flex; \r\n    justify-content: center;\r\n    font-size : 32px;\r\n    margin-top : 20px;\r\n`;\r\n\r\nexport default () => (\r\n<Container>\r\n    <span role=\"img\" aria-label=\"Loading\">\r\n        ♬\r\n    </span>\r\n</Container>)\r\n\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    width : 100vw;\r\n    display : flex;\r\n    justify-content: center;\r\n`;\r\nconst Text = styled.span`\r\n    color : ${props => props.color};\r\n`;\r\nconst Message = ({text, color}) => <Container><Text color={color}>{text}</Text></Container>\r\n\r\nMessage.propTypes = {\r\n    text : PropTypes.string.isRequired,\r\n    color : PropTypes.string.isRequired\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Container = styled.div`\r\n    font-size : 12px;\r\n`;\r\n//background-image : url(${props => `https://image.tmdb.org/t/p/w300${props.bgUrl}`});\r\nconst Image = styled.div`\r\n    background-image : url(${props => props.bgUrl});\r\n    height : 180px;\r\n    background-size : cover;\r\n    border-radius : 2px;\r\n    background-position : center center;\r\n    // transition : opacity 0.5s ease-in-out;\r\n    transition : opacity 0.2s linear;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n    bottom : 3px;\r\n    right : 5px;\r\n    position : absolute;\r\n    opacity : 0;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n    margin-bottom : 5px;\r\n    position : relative;\r\n    &:hover{\r\n        ${Image} {\r\n            opacity : 0.3;\r\n        }\r\n        ${Rating} {\r\n            opacity : 1;\r\n        }\r\n    }\r\n`;\r\n\r\n\r\n\r\nconst Title = styled.span`\r\n    display : block;\r\n    font-size : 12px;\r\n    margin-bottom : 3px;\r\n`;\r\nconst Year = styled.span`\r\n    font-size : 12px;\r\n    color : rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie=false }) => (\r\n  \r\n\r\n    <Link to={ isMovie ? `/movie/${ id }` : `/tv/${ id }`}>\r\n    <Container>\r\n        <ImageContainer>\r\n            <Image bgUrl={ \r\n                imageUrl ? \r\n                `https://image.tmdb.org/t/p/w300${imageUrl}` : require(\"../assets/noPosterSmall.png\")}/>\r\n        <Rating>\r\n            <span role=\"img\" aria-label=\"rating\">★</span>{ rating }/10\r\n        </Rating>\r\n    </ImageContainer>\r\n    <Title>{ title.length > 18 ? `${title.substring(0, 18)}...` : title }</Title>\r\n    <Year>{ year }</Year>\r\n</Container>\r\n</Link>\r\n);\r\n\r\nPoster.propTypes = {\r\n    id : PropTypes.number.isRequired,\r\n    imageUrl : PropTypes.string,\r\n    title : PropTypes.string.isRequired,\r\n    rating : PropTypes.number,\r\n    year : PropTypes.string\r\n}\r\n\r\nexport default Poster;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Error from \"Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n    padding: 20px;\r\n`;\r\n\r\nconst HomePresenter = ({ nowPlaying,popular,upcoming,error,loading}) => loading ? <Loader /> :\r\n    \r\n    <Container>\r\n        <Helmet>\r\n        <title>Movies | NomFlix</title>\r\n        </Helmet>\r\n        {nowPlaying && nowPlaying.length > 0 && (\r\n        <Section title=\"Now Playing\">\r\n            {nowPlaying.map(movie => (<Poster \r\n                                    key={ movie.id } \r\n                                    id={ movie.id } \r\n                                    imageUrl={ movie.poster_path } \r\n                                    title={ movie.title } \r\n                                    rating={ movie.vote_average } \r\n                                    year={ movie.release_date && movie.release_date.substring(0,4) } \r\n                                    isMovie={ true }/>))}\r\n        </Section>)}\r\n        \r\n        {upcoming && upcoming.length > 0 && (\r\n        <Section title=\"Upcoming Movies\">\r\n            {upcoming.map(movie => (<Poster \r\n                                    key={ movie.id } \r\n                                    id={ movie.id } \r\n                                    title={ movie.title } \r\n                                    imageUrl={ movie.poster_path } \r\n                                    rating={ movie.vote_average } \r\n                                    year={ movie.release_date && movie.release_date.substring(0,4) } \r\n                                    isMovie={ true }/>))}\r\n        </Section>)}\r\n\r\n        {popular && popular.length > 0 && (\r\n        <Section title=\"Popular Movies\">\r\n            {popular.map(movie => (<Poster \r\n                                    key={ movie.id } \r\n                                    id={ movie.id } \r\n                                    title={ movie.title } \r\n                                    imageUrl={ movie.poster_path } \r\n                                    rating={ movie.vote_average } \r\n                                    year={ movie.release_date && movie.release_date.substring(0,4) } \r\n                                    isMovie={ true }/>))}\r\n        </Section>)}\r\n\r\n        {error && <Error color=\"#e74c3c\" text={error} />}\r\n    </Container>;\r\n\r\nHomePresenter.propTypes = {\r\n    nowPlaying: PropTypes.array,\r\n    upcoming: PropTypes.array,\r\n    popular: PropTypes.array,\r\n    error: PropTypes.string,\r\n    loading: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default HomePresenter;","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n    baseURL : \"https://api.themoviedb.org/3/\",\r\n    params : {\r\n        api_key:\"f6fe1d184cea4de66129159d4cedcaeb\",\r\n        language : \"ko-KR\"\r\n    }\r\n});\r\n\r\nexport const movieApi = {\r\n    nowPlaying : () => api.get(\"movie/now_playing\"),\r\n    upcoming : () => api.get(\"movie/upcoming\"),\r\n    popular : () => api.get(\"movie/popular\"),\r\n    movieDetail : (id) => api.get(`movie/${id}`, {\r\n        params: {\r\n            append_to_response: \"videos\"\r\n        }\r\n    }),\r\n\r\n    search: term => api.get(\"search/movie\", {\r\n        params: {\r\n            query: encodeURIComponent(term)\r\n        }\r\n    })\r\n}\r\n\r\n\r\nexport const tvApi = {\r\n    topRated : () => api.get(\"tv/top_rated\"),\r\n    popular : () => api.get(\"tv/popular\"),\r\n    airingToday : () => api.get(\"tv/airing_today\"),\r\n    showDetail : (id) => api.get(`tv/${id}`, {\r\n        params: {\r\n            append_to_response: \"videos\"\r\n        }\r\n    }),\r\n    search: term => api.get(\"search/tv\", {\r\n        params: {\r\n            query: encodeURIComponent(term)\r\n        }\r\n    })\r\n}\r\n// const api = axios.create({\r\n//     baseURL : \"https://api.themoviedb.org/3/tv/\",\r\n//     params : {\r\n//         api_key:'f6fe1d184cea4de66129159d4cedcaeb',\r\n//         language : 'ko-KR'}\r\n// });\r\n\r\n// api.get(\"tv/popular\");\r\n\r\n// export default api;\r\n// const instance = axios.create({\r\n//     baseURL: 'https://some-domain.com/api/',\r\n//     timeout: 1000,\r\n//     headers: {'X-Custom-Header': 'foobar'}\r\n//   });","import HomeContainer from \"./HomeContainer\";\r\n\r\nexport default HomeContainer;","import React from \"react\";\r\nimport HomePresenter from \"./HomePresenter\";\r\nimport { movieApi } from \"api\";\r\n\r\nexport default class extends React.Component{\r\n    state = {\r\n        nowPlaying: null,\r\n        upcoming: null,\r\n        popular: null,\r\n        error: null,\r\n        loading: true\r\n    }\r\n\r\n    async componentDidMount(){\r\n        try {\r\n           const {data : {results : nowPlaying}} = await movieApi.nowPlaying();\r\n           console.log(nowPlaying);\r\n           const {data : {results : upcoming}} = await movieApi.upcoming();\r\n           console.log(upcoming);\r\n           const {data : {results : popular}} = await movieApi.popular();\r\n           console.log(popular);\r\n           \r\n           //throw Error();\r\n           this.setState({\r\n               nowPlaying,\r\n               upcoming,\r\n               popular\r\n           })\r\n        } catch {\r\n            this.setState({\r\n                error : \"Can't find movies..\"\r\n            })\r\n        } finally {\r\n            this.setState({\r\n                loading : false\r\n            })\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { nowPlaying, upcoming, popular, error, loading } = this.state;\r\n        console.log(\"renderState : \", this.state);\r\n        return <HomePresenter nowPlaying={nowPlaying} upcoming={upcoming} popular={popular} error={error} loading={loading}></HomePresenter>;\r\n    }\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Error from \"Components/Message\";\r\nimport Poster from \"Components/Poster\"\r\nimport Helmet from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n    padding: 20px;\r\n`;\r\n\r\nconst TVPresenter = ({topRated, popular, airingToday, loading, error}) => (\r\n    <>\r\n    <Helmet>\r\n        <title>TV | NomFlix</title>\r\n    </Helmet>\r\n    {loading ? <Loader /> \r\n                    :\r\n    <Container>\r\n        {topRated && topRated.length > 0 && (\r\n        <Section title=\"Now Playing\">\r\n            {topRated.map(show => (<Poster \r\n                                    key={ show.id } \r\n                                    id={ show.id } \r\n                                    imageUrl={ show.poster_path } \r\n                                    title={ show.name } \r\n                                    rating={ show.vote_average } \r\n                                    year={ show.first_air_date && show.first_air_date.substring(0,4) } \r\n                                    isMovie={ false }/>))}\r\n        </Section>)}\r\n     \r\n\r\n        {popular && popular.length > 0 && (\r\n        <Section title=\"Popular\">\r\n            {popular.map(show => (<Poster \r\n                                    key={ show.id } \r\n                                    id={ show.id } \r\n                                    imageUrl={ show.poster_path } \r\n                                    title={ show.name } \r\n                                    rating={ show.vote_average } \r\n                                    year={ show.first_air_date && show.first_air_date.substring(0,4) } \r\n                                    isMovie={ false }/>))}\r\n        </Section>)}\r\n\r\n        {airingToday && airingToday.length > 0 && (\r\n        <Section title=\"Airing Today\">\r\n            {airingToday.map(show => (<Poster \r\n                                    key={ show.id } \r\n                                    id={ show.id } \r\n                                    imageUrl={ show.poster_path } \r\n                                    title={ show.name } \r\n                                    rating={ show.vote_average } \r\n                                    year={ show.first_air_date && show.first_air_date.substring(0,4) } \r\n                                    isMovie={ false }/>))}\r\n        </Section>)}\r\n\r\n        {error && <Error color=\"#e74c3c\" text={error} />}\r\n    </Container>\r\n    }\r\n    </>\r\n)\r\n\r\nTVPresenter.propTypes = {\r\n    topRated: PropTypes.array,\r\n    popular: PropTypes.array,\r\n    airingToday: PropTypes.array,\r\n    loading: PropTypes.bool.isRequired,\r\n    error: PropTypes.string\r\n}\r\n\r\nexport default TVPresenter;","import TVContainer from \"./TVContainer\";\r\n\r\nexport default TVContainer;","import React from \"react\";\r\nimport TVPresenter from \"./TVPresenter\";\r\nimport { tvApi } from \"api\";\r\n\r\nexport default class extends React.Component{\r\n    state = {\r\n        topRated: null,\r\n        popular: null,\r\n        airingToday: null,\r\n        loading: true,\r\n        error: null\r\n    };\r\n\r\n    componentDidMount = async() =>{\r\n        try{\r\n            const {data : {results : topRated}} = await tvApi.topRated();\r\n            const {data : {results : popular}} = await tvApi.popular();\r\n            const {data : {results : airingToday}} = await tvApi.airingToday();\r\n\r\n            this.setState({\r\n                topRated,\r\n                popular,\r\n                airingToday\r\n            })\r\n\r\n        } catch{\r\n            this.setState({\r\n                error : \"Can't find TVShow..\"\r\n            })\r\n        } finally{\r\n            this.setState({\r\n                loading : false\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { topRated, popular, airingToday, loading, error } = this.state; \r\n        console.log(this.state);\r\n        return (<TVPresenter \r\n        topRated={topRated}\r\n        popular={popular}\r\n        airingToday={airingToday}\r\n        loading={loading}\r\n        error={error}\r\n        />\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"Components/Loader\";\r\nimport Section from \"Components/Section\";\r\nimport Poster from \"Components/Poster\";\r\nimport Error from \"Components/Message\";\r\n\r\nconst Container = styled.div`\r\n    padding : 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n    margin-bottom : 50px;\r\n    width : 100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n    all : unset;\r\n    font-size : 28px;\r\n    width : 100%;\r\n`;\r\n\r\n\r\nconst SearchPresenter = ({movieResults, tvResults, loading, searchTerm, handleSubmit, error, updateTerm}) => \r\n    <Container>\r\n        <Form onSubmit={handleSubmit}>\r\n            <Input placeholder=\"Search..\" value={searchTerm} onChange={updateTerm}></Input>\r\n        </Form>\r\n\r\n        {loading ? <Loader /> : <>\r\n            {movieResults && movieResults.length > 0 && (\r\n                <Section title=\"movieResults\">{movieResults.map(movie => (<Poster \r\n                    key={ movie.id } \r\n                    id={ movie.id } \r\n                    imageUrl={ movie.poster_path } \r\n                    title={ movie.title } \r\n                    rating={ movie.vote_average } \r\n                    year={ movie.release_date && movie.release_date.substring(0,4) } \r\n                    isMovie={ true }/>))}</Section>\r\n            )}\r\n            {tvResults && tvResults.length > 0 && (\r\n                <Section title=\"tvResults \">{tvResults.map(show => (<Poster \r\n                    key={ show.id } \r\n                    id={ show.id } \r\n                    imageUrl={ show.poster_path } \r\n                    title={ show.name } \r\n                    rating={ show.vote_average } \r\n                    year={ show.first_air_date && show.first_air_date.substring(0,4) } \r\n                    isMovie={ false }/>))}</Section>\r\n            )}\r\n\r\n            {error && <Error color=\"#e74c3c\" text={error} />}\r\n            {tvResults && movieResults && tvResults.length === 0 && movieResults.length === 0 && <Error color=\"#bdc3c7\" text={`Not Found for : ${searchTerm}`} />}\r\n        </>}\r\n    </Container>;\r\n\r\nSearchPresenter.propTypes = {\r\n    movieResults: PropTypes.array,\r\n    tvResults: PropTypes.array,\r\n    error: PropTypes.string,\r\n    searchTerm: PropTypes.string,\r\n    loading: PropTypes.bool.isRequired,\r\n    handleSubmit : PropTypes.func.isRequired,\r\n    updateTerm : PropTypes.func.isRequired\r\n}\r\n\r\nexport default SearchPresenter;","import SearchContainer from \"./SearchContainer\";\r\n\r\nexport default SearchContainer;","import React from \"react\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\nimport { movieApi } from \"api\";\r\nimport { tvApi } from \"api\";\r\n\r\nexport default class extends React.Component{\r\n    state = {\r\n        movieResults: null,\r\n        tvResults: null,\r\n        searchTerm: \"\",\r\n        loading: false,   //default 는 아무것도 로딩 X \r\n        error: null\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        console.log(\"submit value : \", e);\r\n        console.log(\"submit value : \", this.state);\r\n        e.preventDefault();\r\n        const {searchTerm} = this.state;\r\n        if(searchTerm !== \"\"){\r\n            this.searchByTerm(searchTerm);\r\n        }\r\n    }\r\n\r\n    updateTerm = (e) => {\r\n        const {target : { value }} = e;\r\n\r\n        this.setState({searchTerm: value});\r\n    }\r\n\r\n    searchByTerm = async(term) =>{\r\n        try {\r\n            this.setState({\r\n                loading : true\r\n            })\r\n            const {data: {results : movieResults}} = await movieApi.search(term);\r\n            const {data: {results : tvResults}} = await tvApi.search(term);\r\n\r\n            console.log(\"movieResults : \", movieResults);\r\n            console.log(\"showResutls : \", tvResults)\r\n            this.setState({\r\n                movieResults,\r\n                tvResults\r\n            })\r\n        } catch {\r\n            this.setState({\r\n                error : \"Can't find results..\"\r\n            })\r\n        } finally {\r\n            this.setState({\r\n                loading : false\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { movieResults, tvResults, searchTerm, loading, error } = this.state; \r\n\r\n        return (<SearchPresenter \r\n        movieResults={movieResults}\r\n        tvResults={tvResults}\r\n        loading={loading}\r\n        error={error}\r\n        searchTerm={searchTerm}\r\n        handleSubmit={this.handleSubmit}\r\n        updateTerm={this.updateTerm}\r\n        />\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"Components/Loader\";\r\nimport Helmet from \"react-helmet\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Container = styled.div`\r\n    height : calc(100vh - 50px);\r\n    width : 100%;\r\n    position : relative;\r\n    padding : 50px;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n    position : absolute;\r\n    top : 0;\r\n    left : 0; \r\n    width : 100%;\r\n    height : 100%;\r\n    background-image : url(${props => props.bgImage});\r\n    background-position : center center;\r\n    background-size : cover;\r\n    filter : blur(3px);\r\n    opacity : 0.5;\r\n  \r\n`;\r\n\r\nconst Content = styled.div`\r\n    display : flex; \r\n    width : 100%;\r\n    height : 100%;\r\n`;\r\nconst Cover = styled.div`\r\n    width : 30%;\r\n    background-image : url(${props => props.bgImage});\r\n    background-position : center center;\r\n    background-size : cover;\r\n    heigth : 100%;\r\n    border-radius : 5px;\r\n    z-index : 1;\r\n`;\r\n\r\nconst Data = styled.div`\r\n    width : 70%;\r\n    margin-left : 10px; \r\n`;\r\n\r\nconst Title = styled.h3`\r\n    font-size : 37px;\r\n    margin-bottom : 10px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n    margin : 20px 0;\r\n`;\r\n\r\nconst Item = styled.span`\r\n\r\n`;\r\n\r\nconst Divider = styled.span`\r\n    margin : 0 10px;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n    font-size : 12px;\r\n    opacity : 0.7;\r\n    line-height : 1.5;\r\n    width : 50%;\r\n`;\r\n\r\nconst Category = styled.div`\r\n    margin : 20px 0;\r\n`;\r\n\r\nconst CategoryTab = styled.ul`\r\n    display : flex; \r\n`;\r\nconst CategoryList = styled.li`\r\n    margin-left : 20px;\r\n`;\r\n\r\nconst DetailPresenter = ({result,error,loading,isMovie}) => \r\n    loading ? \r\n    <>\r\n        <Helmet>\r\n            <title>Loading.. | NomFlix</title>\r\n        </Helmet>\r\n        <Loader />\r\n    </> \r\n    :\r\n    <Container> \r\n         <Helmet>\r\n            <title>{result.title ? result.title : result.name} | NomFlix</title>\r\n        </Helmet>\r\n        <Backdrop bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}></Backdrop>\r\n        <Content>\r\n            <Cover bgImage={result.poster_path ? `https://image.tmdb.org/t/p/original${result.poster_path}` :  require(\"../../assets/noPosterSmall.png\")} />\r\n            <Data>\r\n            <Title>\r\n                {result.title ? result.title : result.name}\r\n            </Title>\r\n            <ItemContainer>\r\n                <Item>{result.release_date ? result.release_date.substring(0,4) : result.first_air_date.substring(0,4)}</Item>\r\n                <Divider>*</Divider>\r\n                <Item>{result.runtime ? result.runtime : result.episode_run_time[0]} min</Item>\r\n                <Divider>*</Divider>\r\n                <Item>{result.genres && result.genres.map((genre, index) => index === result.genres.length -1 ? genre.name : `${genre.name} / `)}</Item>\r\n            </ItemContainer>\r\n            <Overview>{result.overview}</Overview>\r\n\r\n            <Category>\r\n                <CategoryTab>{result.videos.results && result.videos.results.length > 0 && result.videos.results.map(item => <Link to={isMovie \r\n                    ?  `/movie/${item.id}/video/${item.key}` : `/show/${item.id}/video/${item.key}`} key={item.key}>{item.name}</Link>) }</CategoryTab>\r\n            </Category>\r\n        </Data>\r\n        </Content>      \r\n    </Container>;\r\n\r\nDetailPresenter.propTypes = {\r\n    result: PropTypes.array,\r\n    error: PropTypes.string,\r\n    loading: PropTypes.bool.isRequired,\r\n    isMovie : PropTypes.bool\r\n}\r\n\r\nexport default DetailPresenter;","import DetailContainer from \"./DetailContainer\";\r\n\r\nexport default DetailContainer;","import React from \"react\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\nimport { movieApi } from \"api\";\r\nimport { tvApi } from \"../../api\";\r\n\r\nexport default class extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        const {location : { pathname }} = props;\r\n\r\n        this.state = {\r\n        result: null,\r\n        error: null,\r\n        loading: true,\r\n        isMovie: pathname.includes(\"/movie/\")\r\n    }}\r\n\r\n    async componentDidMount(){\r\n        const {match : {params : {id}}, history : {push}} = this.props;\r\n        const { isMovie } = this.state;\r\n        console.log(\"Detail_id : \", id);\r\n\r\n        const parseId = parseInt(id);\r\n    \r\n        if(isNaN(parseId)){\r\n            return push(\"/\");\r\n        }\r\n        let result = null;\r\n\r\n        try {\r\n            if(isMovie){\r\n                // const request = await movieApi.movieDetail(parseId);\r\n                // result = request.data;\r\n                ({data: result} = await movieApi.movieDetail(parseId));\r\n            }else{\r\n                // const request = await tvApi.showDetail(parseId);\r\n                // result = request.data; \r\n                ({data: result} = await tvApi.showDetail(parseId));             \r\n            }\r\n            console.log(\"result : \", result);\r\n        } catch {\r\n            this.setState({\r\n                error: \"Can't find anything.\"\r\n            })\r\n        } finally {\r\n            this.setState({\r\n                loading : false,\r\n                result\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    render(){\r\n        const { result, error, loading,isMovie } = this.state;\r\n        console.log(this.state)\r\n        return <DetailPresenter result={result} error={error} loading={loading} isMovie={isMovie}/>\r\n    }\r\n}","import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Header = styled.header`\r\n    color:white;\r\n    position:fixed;\r\n    top:0;\r\n    left:0;\r\n    width:100%;\r\n    height:50px;\r\n    display:flex;\r\n    align-items:center;\r\n    \r\n    background-color: rgba(20, 20, 20, 0.5);\r\n    z-index: 10;\r\n    back-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8); \r\n`;\r\n\r\nconst List = styled.ul`\r\n    display : flex;\r\n    &:hover{\r\n        background-color : black;\r\n    }\r\n`;\r\n\r\nconst Item = styled.li`\r\n    width:80px;\r\n    height:50px;\r\n    text-align:center;\r\n    border-bottom: 3px solid ${props => props.current ? \"#3498db\" : \"transparent\"};\r\n    transition: border-bottom .5s ease-in-out;\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n    height:50px;\r\n    display:flex;\r\n    align-items:center;\r\n    justify-content: center;\r\n`;\r\nexport default withRouter(({location : {pathname}}) => (\r\n    <Header>\r\n        {console.log(pathname)}\r\n        <List>\r\n            <Item current={pathname === \"/\"}>\r\n                <SLink to=\"/\">Movies</SLink>\r\n            </Item>\r\n            <Item current={pathname === \"/tv\"}>\r\n                <SLink to=\"/tv\">TV</SLink>\r\n            </Item>\r\n            <Item current={pathname === \"/search\"}>\r\n                <SLink to=\"/search\">Search</SLink>\r\n            </Item>\r\n        </List>\r\n    </Header>\r\n));\r\n\r\n\r\n// const HeaderC = (props) => (\r\n//         <Header>\r\n//             <List>\r\n//                 <Item current={true}>\r\n//                     <SLink to=\"/\">Movies</SLink>\r\n//                 </Item>\r\n//                 <Item current={true}>\r\n//                     <SLink to=\"/tv\">TV</SLink>\r\n//                 </Item>\r\n//                 <Item current={true}>\r\n//                     <SLink to=\"/search\">Search</SLink>\r\n//                 </Item>\r\n//             </List>\r\n//         </Header>\r\n \r\n// );\r\n\r\n// export default withRouter(HeaderC);    //withRouter를 삭제하면 (export default HeaderC; ) props가 없어짐.. ","import React from \"react\";\r\n//import { HashRouter as Router, Route } from \"react-router-dom\";\r\nimport { BrowserRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\r\nimport Home from \"Routes/Home\";\r\nimport TV from \"Routes/TV\";\r\nimport Search from \"Routes/Search\";\r\nimport Detail from \"Routes/Detail\";\r\nimport Header from \"Components/Header\";\r\n\r\nexport default () => (\r\n    <Router>\r\n        <>\r\n        <Header />\r\n        <Switch>\r\n        <Route path=\"/\" exact component={Home} />\r\n        <Route path=\"/tv\" exact component={TV} />\r\n        <Route path=\"/search\"  component={Search} />\r\n        <Route path=\"/movie/:id\" component={Detail} />\r\n        <Route path=\"/tv/:id\" component={Detail} />\r\n        <Redirect from=\"*\" to=\"/\" />\r\n        </Switch>\r\n        </>\r\n    </Router>\r\n)","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst globalStyles = createGlobalStyle`\r\n    ${ reset };\r\n    a{\r\n        text-decoration:none;\r\n        color:inherit;\r\n    }\r\n    *{\r\n        box-sizing:border-box;\r\n    }\r\n    body{\r\n        font-size:14px;\r\n        background-color: rgba(20, 20, 20, 1);\r\n        color:white;\r\n        padding-top:50px;\r\n    }\r\n`;\r\n\r\nexport default globalStyles;","import React, { Component } from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'Components/App';\nimport \"api\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}